---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Générateur IA">
  <main class="container">
    <h1>Générateur d'Intelligence Artificielle</h1>
    
    <div class="generator-interface">

      <div class="preview-section">
        <div class="preview-box">
          <div id="image-display">
            <p class="placeholder-text">Votre image générée apparaîtra ici...</p>
          </div>
        </div>
      </div>


      <div class="code-section">
        <div class="code-editor">
          <div class="editor-header">
            <span class="editor-title">Code SVG généré</span>
          </div>
        </div>
      </div>
    </div>


    <div class="control-panel">
      <input type="text" id="prompt-input" placeholder="Décrivez l'image que vous voulez générer (ex: voiture bleue, maison, arbre...)" />
      <button id="generate-btn" class="generate-button">Générer</button>
    </div>
  </main>

  <script>

    document.addEventListener('DOMContentLoaded', function() {

      const generateBtn = document.getElementById('generate-btn');
      const outputArea = document.getElementById('output-area');
      const promptInput = document.getElementById('prompt-input');
      const quickPrompt = document.getElementById('quick-prompt');
      const complexitySlider = document.getElementById('complexity');
      const complexityValue = document.getElementById('complexity-value');


      if (!generateBtn || !outputArea || !promptInput || !quickPrompt || !complexitySlider || !complexityValue) {
        console.error('Certains éléments ne sont pas trouvés');
        return;
      }


      complexitySlider.addEventListener('input', function() {
        complexityValue.textContent = this.value;
      });


      generateBtn.addEventListener('click', function() {
        const prompt = promptInput.value || quickPrompt.value;
        
        if (!prompt.trim()) {
          alert('Veuillez entrer un prompt !');
          return;
        }


        const styleSelect = document.getElementById('style-select');
        const currentStyle = styleSelect.value;
        const currentComplexity = complexitySlider.value;


        outputArea.innerHTML = '<div class="loading">Génération en cours...</div>';
        

        setTimeout(() => {
          outputArea.innerHTML = `
            <div class="generated-content">
              <h3>Résultat généré :</h3>
              <p><strong>Prompt :</strong> ${prompt}</p>
              <div class="result-box">
                <p>Voici le contenu généré par l'IA basé sur votre demande.</p>
                <p><strong>Style :</strong> ${currentStyle}</p>
                <p><strong>Complexité :</strong> ${currentComplexity}/10</p>
                <p><strong>Timestamp :</strong> ${new Date().toLocaleTimeString()}</p>
              </div>
            </div>
          `;
          

          promptInput.value = '';
          quickPrompt.value = '';
        }, 2000);
      });


      quickPrompt.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          generateBtn.click();
        }
      });


      promptInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter' && e.ctrlKey) {
          generateBtn.click();
        }
      });
    });
  </script>

  <style>
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
      font-family: 'Arial', sans-serif;
    }

    h1 {
      text-align: center;
      color: #333;
      margin-bottom: 30px;
      font-size: 2.5em;
    }

    .generator-interface {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 20px;
      min-height: 400px;
    }

    .preview-section {
      background: black;
      border-radius: 15px;
      padding: 20px;
    }

    .preview-box {
      background: white;
      border-radius: 10px;
      height: 100%;
      padding: 20px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    #image-display {
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
      text-align: center;
    }

    #image-display svg {
      max-width: 100%;
      max-height: 100%;
    }

    #svg-code {
      height: 100%;
      background: black;
      color: #fff;
      padding: 20px;
      margin: 0;
      overflow: auto;
      font-family: 'Courier New', monospace;
      font-size: 12px;
      line-height: 1.4;
      white-space: pre-wrap;
      word-break: break-all;
    }

    #svg-code code {
      color: #a8e6cf;
    }

    .placeholder-text {
      color: #999;
      font-style: italic;
    }

    .code-section {
      background: #1a1a1a;
      border-radius: 15px;
      overflow: hidden;
    }

    .editor-header {
      background: #2d2d2d;
      padding: 15px 20px;
      color: white;
      font-weight: bold;
    }

    .editor-content {
      padding: 20px;
      height: calc(100% - 60px);
    }

    #prompt-input {
      width: 100%;
      height: 150px;
      background: #333;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 15px;
      font-family: 'Courier New', monospace;
      font-size: 14px;
      resize: none;
      margin-bottom: 20px;
    }

    #prompt-input::placeholder {
      color: #888;
    }

    .settings {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    .setting-group {
      display: flex;
      align-items: center;
      gap: 10px;
      color: white;
    }

    .setting-group label {
      min-width: 80px;
    }

    .setting-group select,
    .setting-group input {
      flex: 1;
      padding: 8px;
      border-radius: 5px;
      border: none;
      background: #444;
      color: white;
    }

    .control-panel {
      display: flex;
      gap: 15px;
      align-items: center;
      background: white;
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    }

    #prompt-input {
      flex: 1;
      padding: 15px;
      border: 2px solid #ddd;
      border-radius: 10px;
      font-size: 16px;
    }

    #prompt-input:focus {
      outline: none;
      border-color: #667eea;
    }

    .generate-button {
      background: black;
      color: white;
      border: none;
      padding: 15px 30px;
      border-radius: 10px;
      font-size: 16px;
      font-weight: bold;
      cursor: pointer;
      transition: transform 0.2s;
    }

    .generate-button:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.2);
    }

    .loading {
      display: flex;
      align-items: center;
      justify-content: center;
      height: 100%;
      font-style: italic;
      color: #667eea;
    }

    .generated-content {
      text-align: left;
    }

    .result-box {
      background: #f8f9fa;
      padding: 15px;
      border-radius: 8px;
      border-left: 4px solid black;
      margin-top: 10px;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .generator-interface {
        grid-template-columns: 1fr;
        gap: 15px;
      }
      
      .control-panel {
        flex-direction: column;
        gap: 10px;
      }
      
      #quick-prompt {
        width: 100%;
      }
    }
  </style>
</Layout>